upstream thingserver {
        server 127.0.0.1:8889;
        keepalive 64;
}


map $http_upgrade $connection_upgrade {
	default upgrade;
	"" close;
}


server {
        listen 8888 ssl;
 
	
        ssl_certificate     --HOME--/.m2ag-labs/ssl/server.crt;
        ssl_certificate_key --HOME--/.m2ag-labs/ssl/server.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        server_name --HOSTNAME--.local;

        access_log            /var/log/nginx/m2ag-thing-proxy.access.log;

        location / {
#           add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS,PUT,DELETE' always;
#           add_header 'Access-Control-Allow-Credentials' 'true' always;
#           add_header 'Access-Control-Allow-Origin' '$http_origin' always;
#           add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,Keep-Alive,Content-Type,accept,origin,X-Requested-With' always;
#           add_header 'Access-Control-Expose-Headers' 'Authorization,DNT,User-Agent,Keep-Alive,Content-Type,accept,origin,X-Requested-With,Content-Disposition' always;

#	   if ($request_method = OPTIONS ) {
#               return 200;
#           }
          
           proxy_set_header        Host $host;
           proxy_set_header        origin $http_origin;
           proxy_set_header        X-Real-IP $remote_addr;
           proxy_set_header        X-Scheme $scheme; 
           proxy_set_header        X-Forwarded-For  $proxy_add_x_forwarded_for;
           proxy_set_header        X-Forwarded-Port $server_port;
           proxy_set_header        X-Forwarded-Proto $scheme;

           proxy_pass          http://thingserver/; 
           
           proxy_read_timeout  36000s;
           proxy_buffering off;
           proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection $connection_upgrade;

#           limit_except OPTIONS {
#              auth_basic "--HOSTNAME--";
#              auth_basic_user_file --HOME--/.m2ag-labs/.htpasswd;
#           }

        }

}
